sudo: required
dist: xenial

language: go
go:
  - "1.10.x"
  - "1.x"

env:
  # For pip --user
  - PATH=$HOME/.local/bin:$PATH

cache:
  directories:
    - $HOME/.gimme
    - $TRAVIS_HOME/go
    - $TRAVIS_HOME/android
    - $HOME/.gradle
    - $HOME/.cache/pip

notifications:
  slack:
    secure: ZzIEqFE4XRdE9U2p3aeE32DMtoC8RgjoEavhEQ1oLrWFgUpLktqmp9UVY/U+W6iElilLpDbFpry51+Sv9MWpxJMxr+Q/JJuq/3Bj5KjF/wEtil7qvBYhQ1sM/qUQFG6wRkrMNjZGMiaTmnkWF0rZB8lf7+nbnGFaPW3AVVbD+8gVDWTHI4Hcvvgs0UbrJzoPfpvH0dprOchswc1BBKTgo5c44rvS2fquEMVcqMMiNJ5JQqphuRWLTfzLgOzImSf0/xJJyVp/YTkSnVSg8BcWmDCJ4iB9fJkVyZM9WxcgY/J4T5VzFxfMah9zv2j8UTfzHSMeCJDRL647hdnkmr/Qum/LN91Ey2DJw5KUH743CsAbyGhQML6wZ3NCeEP06hnMDphalU5+BYhtAPyc5CB84g6eLIUQ2EqptuPZpjFQohFnapCTnfB5XKTcW+PjxJsoJzk8x+85Xid+H1nnNxeyf10tLv6Pwy4ZGmEEbsa4SYWXibpIEu3fPJXEdtrht0vM40pDLeUYL6Axmh7hNjmDQOXJG41saF+Rk4AArRhKhMQTmlYCc0e1H2/hIDXUMPbqjHeCpEkaA5W8BFBKynhlJa0JX+rtHDFaK82Di8rXT0NO2ACyG8ZQqk87qePyBYPyfR8hRwhrkmQHlYYOZzV6LBz+ynJuWl9ktcC2irJlHZs=


before_install:
  # Get Golang in Android environment
  - if [ -z "$TRAVIS_GO_VERSION" ]; then eval "$(curl -sL https://raw.githubusercontent.com/travis-ci/gimme/master/gimme | GIMME_GO_VERSION=stable bash)"; fi
  # Use cached directory as GOPATH
  - export GOPATH=$TRAVIS_HOME/go
  - export PATH=$GOPATH/bin:$PATH
  - mkdir -p $GOPATH/src/github.com/sergeyfrolov
  - mv $TRAVIS_BUILD_DIR $GOPATH/src/github.com/sergeyfrolov/gotapdance
  - export TRAVIS_BUILD_DIR=$GOPATH/src/github.com/sergeyfrolov/gotapdance
  - cd $TRAVIS_BUILD_DIR
  # Move Android tools directory
  - if [ -z "$ANDROID_HOME" ] && [ ! -d "$TRAVIS_HOME/android/tools" ]; then cp -r $ANDROID_HOME/* $TRAVIS_HOME/android/; fi
  - export ANDROID_HOME=$TRAVIS_HOME/android
  - export PATH=$ANDROID_HOME/tools/bin:$PATH
before_cache:
  # Don't cache gotapdance
  - mv $TRAVIS_BUILD_DIR $TRAVIS_HOME/tmp
  - export TRAVIS_BUILD_DIR=$TRAVIS_HOME/tmp
  - cd $TRAVIS_BUILD_DIR


## gotapdance tests
# Go versions: all specified
install:
  - go get -d -u -t ./...
  - go get -u github.com/alecthomas/gometalinter
script:
  - go test -race -v ./tapdance
  - go test -race -v ./tdproxy
  - gometalinter --install
  - gometalinter --disable-all -E vet -E gofmt -E misspell -E ineffassign -E deadcode --tests ./tapdance


jobs:
  include:
    ## Build cli, Psiphon ConsoleClient and Android app
    # Go versions: first value in list
    - &build # YAML anchor/alias
      stage: build
      name: "Build cli and Psiphon ConsoleClient on Linux"
      install:
        - go get -d -u ./...
        # Substitute build string
        - sed -i.bak "s/\[BUILD\]/$TRAVIS_BRANCH-$TRAVIS_COMMIT/" tapdance/logger.go
        - if [ -d "$GOPATH/src/github.com/Psiphon-Labs/psiphon-tunnel-core" ]; then (cd $GOPATH/src/github.com/Psiphon-Labs/psiphon-tunnel-core && git reset --hard); fi
        - go get -d -u github.com/Psiphon-Labs/psiphon-tunnel-core/psiphon
        # Remove gotapdance from vendored packages
        - go get -u github.com/kardianos/govendor
        - (cd $GOPATH/src/github.com/Psiphon-Labs/psiphon-tunnel-core && govendor remove github.com/sergeyfrolov/gotapdance/...)
        # Enable TapDance logging
        - sed -i.bak "s/refraction_networking_tapdance\.Logger()\.Out = ioutil\.Discard//" $GOPATH/src/github.com/Psiphon-Labs/psiphon-tunnel-core/psiphon/common/tapdance/tapdance.go
      script:
        - go build -o build/cli-$TRAVIS_OS_NAME ./cli
        - go build -o build/ConsoleClient-$TRAVIS_OS_NAME -tags "TAPDANCE" github.com/Psiphon-Labs/psiphon-tunnel-core/ConsoleClient
      after_success:
        # Upload built binaries to S3
        - pip install --user awscli
        - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then aws s3 sync build s3://$AWS_BUCKET/$TRAVIS_REPO_SLUG/$TRAVIS_BRANCH/; fi

    - <<: *build # Same build on OS X
      name: "Build cli and Psiphon ConsoleClient on OS X"
      os: osx

    - <<: *build # Reuse setup steps from build
      name: "Build Psiphon Android Library and App"
      dist: trusty # xenial not available
      language: android
      before_script:
        # Install NDK and accept licenses
        - yes | sdkmanager "tools"
        - yes | sdkmanager "platform-tools" "build-tools;28.0.3" "platforms;android-23" "ndk-bundle"
        - if [ -d "$GOPATH/src/golang.org/x/mobile/cmd/gomobile" ]; then (cd $GOPATH/src/golang.org/x/mobile/cmd/gomobile && git reset --hard); fi
        - go get -d -u golang.org/x/mobile/cmd/gomobile
        # Freeze gomobile version (newer versions break Psiphon code)
        - (cd $GOPATH/src/golang.org/x/mobile/cmd/gomobile && git reset --hard 320ec40f6328971c405979b804e20d5f3c86770c)
        # Binary hashes has since changed
        - sed -i.bak "s/709d96f5234c224e4b72254fd2e196d0e1486b8d943e972ed98cf14e3ca7bdde/bacfed664a7b69b1b693f246ea49a85f04f502bd1ae723351c5345ab5b2ba850/" $GOPATH/src/golang.org/x/mobile/cmd/gomobile/hashes.go
        - sed -i.bak "s/df8492a31030c4a940aa17602ea7ce56eb0759be9235f68fcce4c51150e49881/84c9361734902df622dd49a8c0cfb0090fd7743a2cbf927a9ae85c4826beb173/" $GOPATH/src/golang.org/x/mobile/cmd/gomobile/hashes.go
        - go install golang.org/x/mobile/cmd/gomobile
        # Initialize gomobile tool
        - if [ ! -d "$GOPATH/pkg/gomobile" ]; then gomobile init; fi
        - mkdir -p $GOPATH/src/bitbucket.org/psiphon/psiphon-circumvention-system/.hg
        - (cd $GOPATH/src/bitbucket.org/psiphon/psiphon-circumvention-system && hg update --clean)
        - (cd $GOPATH/src/bitbucket.org/psiphon/psiphon-circumvention-system && hg pull -u -b default https://bitbucket.org/psiphon/psiphon-circumvention-system)
        # Use modified EmbeddedValues.java for TapDance
        - openssl aes-256-cbc -d -K $encrypted_8a9748c534c1_key -iv $encrypted_8a9748c534c1_iv -in build/EmbeddedValues.java.enc -out $GOPATH/src/bitbucket.org/psiphon/psiphon-circumvention-system/Android/app/src/main/java/com/psiphon3/psiphonlibrary/EmbeddedValues.java
        # Patched tunneling protocol for TapDance
        - patch $GOPATH/src/bitbucket.org/psiphon/psiphon-circumvention-system/Android/app/src/main/java/com/psiphon3/psiphonlibrary/TunnelManager.java build/TunnelManager.java.patch
      script:
        # Build Psiphon Android Library ca.psiphon.aar
        - (cd $GOPATH/src/github.com/Psiphon-Labs/psiphon-tunnel-core/MobileLibrary/Android && ./make.bash "TAPDANCE")
        - mv $GOPATH/src/github.com/Psiphon-Labs/psiphon-tunnel-core/MobileLibrary/Android/ca.psiphon.aar build/
        # Build Psiphon Android App PsiphonAndroid-debug.apk
        - cp build/ca.psiphon.aar $GOPATH/src/bitbucket.org/psiphon/psiphon-circumvention-system/Android/app/libs/
        - (cd $GOPATH/src/bitbucket.org/psiphon/psiphon-circumvention-system/Android && ./gradlew assembleDebug)
        - mv $GOPATH/src/bitbucket.org/psiphon/psiphon-circumvention-system/Android/app/build/outputs/apk/debug/PsiphonAndroid-debug.apk build/
